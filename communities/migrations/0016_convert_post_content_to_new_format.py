# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-07-23 10:48
from __future__ import unicode_literals

from django.db import migrations, transaction, connection
from django.utils import timezone


def convert_post_content_to_new_format(apps, schema_editor):
    batch_size = 10000
    updates_per_vacuum = 500000
    Post = apps.get_model('communities', 'Post')
    now = timezone.now()
    updated_post_pub_time_min = now
    updated = 0
    updated_after_vacuum = 0
    while True:
        posts = Post.objects.filter(
            checked_at__lt=now,
            published_at__lte=updated_post_pub_time_min,
        ).order_by(
            '-published_at'
        ).only(
            'published_at', 'content'
        )[:batch_size]
        posts = list(posts)

        changed_posts = []
        for p in posts:
            content = p.content
            if len(content) and isinstance(content[0], str):
                content = [{'text': text} for text in content]
                p.content = content
                changed_posts.append(p)

        with transaction.atomic():
            for p in changed_posts:
                p.save(update_fields=['content'])

        updated_post_pub_time_min = posts[-1].published_at
        updated_after_vacuum += len(posts)
        updated += len(posts)
        if updated_after_vacuum >= updates_per_vacuum:
            print('{} rows updated'.format(updated))
            vacuum()
            updated_after_vacuum = 0
        elif len(posts) < batch_size:
            print('{} rows updated'.format(updated))
            vacuum()
            break


def vacuum():
    with connection.cursor() as c:
        c.execute('VACUUM;')


class Migration(migrations.Migration):

    atomic = False

    dependencies = [
        ('communities', '0015_post_content_fts_index'),
    ]

    operations = [
        migrations.RunPython(convert_post_content_to_new_format, migrations.RunPython.noop)
    ]
